<!DOCTYPE html>
<html lang="en"> 
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up | Your App</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <style>
      :root {
        --primary-color: #4e73df;
        --secondary-color: #f8f9fc;
        --success-color: #1cc88a;
        --error-color: #e74a3b;
        --text-color: #5a5c69;
        --border-radius: 0.35rem;
      }

      body {
        font-family: "Nunito", -apple-system, BlinkMacSystemFont, "Segoe UI",
          Roboto, "Helvetica Neue", Arial, sans-serif;
        background-color: var(--secondary-color);
        color: var(--text-color);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .signup-container {
        width: 100%;
        max-width: 500px;
        padding: 2rem;
      }

      .card {
        border: none;
        border-radius: var(--border-radius);
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
      }

      .card-header {
        background-color: white;
        border-bottom: 1px solid #e3e6f0;
        padding: 1.5rem 1.25rem;
        text-align: center;
      }

      .card-header h3 {
        margin-bottom: 0;
        font-weight: 700;
        color: var(--primary-color);
      }

      .card-body {
        padding: 1.5rem;
      }

      .form-floating {
        margin-bottom: 1rem;
      }

      .form-floating input:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem rgba(78, 115, 223, 0.25);
      }

      .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        padding: 0.75rem;
        font-weight: 600;
      }

      .btn-primary:hover {
        background-color: #2e59d9;
        border-color: #2e59d9;
      }

      .form-check {
        margin-bottom: 1rem;
      }

      .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
      }

      .alert {
        border-radius: var(--border-radius);
        margin-bottom: 1rem;
        padding: 0.75rem 1.25rem;
      }

      .divider {
        text-align: center;
        position: relative;
        margin: 1.5rem 0;
      }

      .divider::before,
      .divider::after {
        content: "";
        position: absolute;
        top: 50%;
        width: 45%;
        height: 1px;
        background-color: #e3e6f0;
      }

      .divider::before {
        left: 0;
      }

      .divider::after {
        right: 0;
      }

      .social-login {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
      }

      .social-login .btn {
        flex: 1;
        padding: 0.75rem;
      }

      .btn-google {
        background-color: #ea4335;
        color: white;
      }

      .btn-google:hover {
        background-color: #d62516;
        color: white;
      }

      .btn-github {
        background-color: #333;
        color: white;
      }

      .btn-github:hover {
        background-color: #1a1a1a;
        color: white;
      }

      .invalid-feedback {
        display: none;
        color: var(--error-color);
        font-size: 0.85rem;
        margin-top: 0.25rem;
      }

      .is-invalid ~ .invalid-feedback {
        display: block;
      }

      .is-invalid {
        border-color: var(--error-color) !important;
      }

      .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: #6c757d;
        z-index: 10;
      }

      .brand {
        text-align: center;
        margin-bottom: 2rem;
      }

      .brand img {
        max-width: 120px;
        margin-bottom: 1rem;
      }

      .password-wrapper {
        position: relative;
      }

      .animated {
        animation-duration: 0.3s;
        animation-fill-mode: both;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }

      .fadeIn {
        animation-name: fadeIn;
      }

      /* Responsive adjustments */
      @media (max-width: 576px) {
        .signup-container {
          padding: 1rem;
        }
      }
    </style>
  </head>
  <body>
    <div class="container signup-container">
      <!-- Brand Logo -->
      <div class="brand">
        <img
          src="/images/logo.png"
          alt="Logo"
          onerror="this.src='https://via.placeholder.com/120x60?text=YourLogo'; this.onerror=null;"
        />
        <h2>Create Your Account</h2>
      </div>

      <!-- Signup Card -->
      <div class="card">
        <div class="card-header">
          <h3>Sign Up</h3>
        </div>

        <div class="card-body">
          <!-- Alert Messages -->
          <% if (locals.error && locals.error.length > 0) { %>
          <div class="alert alert-danger animated fadeIn">
            <i class="fas fa-exclamation-circle me-2"></i><%= error %>
          </div>
          <% } %> <% if (locals.success && locals.success.length > 0) { %>
          <div class="alert alert-success animated fadeIn">
            <i class="fas fa-check-circle me-2"></i><%= success %>
          </div>
          <% } %>

          <!-- Signup Form -->
          <form id="signupForm" action="/api/auth/register" method="POST">
            <!-- Name -->
            <div class="form-floating mb-3">
              <input
                type="text"
                class="form-control"
                id="name"
                name="name"
                placeholder="Your Name"
                required
                minlength="2"
              />
              <label for="name">Full Name</label>
              <div class="invalid-feedback">
                Name must be at least 2 characters.
              </div>
            </div>

            <!-- Email -->
            <div class="form-floating mb-3">
              <input
                type="email"
                class="form-control"
                id="email"
                name="email"
                placeholder="name@example.com"
                required
              />
              <label for="email">Email address</label>
              <div class="invalid-feedback">
                Please enter a valid email address.
              </div>
            </div>

            <!-- Password -->
            <div class="form-floating mb-3 password-wrapper">
              <input
                type="password"
                class="form-control"
                id="password"
                name="password"
                placeholder="Password"
                required
                minlength="8"
              />
              <label for="password">Password</label>
              <span class="password-toggle" id="passwordToggle">
                <i class="fas fa-eye"></i>
              </span>
              <div class="invalid-feedback">
                Password must be at least 8 characters.
              </div>
            </div>

            <!-- Password Strength Meter -->
            <div class="mb-3">
              <div class="progress" style="height: 5px">
                <div
                  id="passwordStrength"
                  class="progress-bar"
                  role="progressbar"
                  style="width: 0%"
                  aria-valuenow="0"
                  aria-valuemin="0"
                  aria-valuemax="100"
                ></div>
              </div>
              <small id="passwordStrengthText" class="form-text text-muted"
                >Password strength</small
              >
            </div>

            <!-- Terms and Conditions -->
            <div class="form-check mb-3">
              <input
                class="form-check-input"
                type="checkbox"
                id="agreeTerms"
                name="agreeTerms"
                required
              />
              <label class="form-check-label" for="agreeTerms">
                I agree to the
                <a href="/terms" target="_blank">Terms of Service</a> and
                <a href="/privacy" target="_blank">Privacy Policy</a>
              </label>
              <div class="invalid-feedback">
                You must agree before submitting.
              </div>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary w-100 mb-3">
              <i class="fas fa-user-plus me-2"></i>Create Account
            </button>
          </form>

          <!-- Social Signup Divider -->
          <div class="divider">
            <span class="bg-white px-2 text-muted">or sign up with</span>
          </div>

          <!-- Social Signup Buttons -->
          <div class="social-login">
            <a href="/api/auth/google" class="btn btn-google">
              <i class="fab fa-google me-2"></i>Google
            </a>
            <a href="/api/auth/github" class="btn btn-github">
              <i class="fab fa-github me-2"></i>GitHub
            </a>
          </div>

          <!-- Login Link -->
          <div class="text-center mt-4">
            <p class="mb-0">
              Already have an account?
              <a href="/login" class="text-decoration-none">Login here</a>
            </p>
          </div>
        </div>
      </div>

      <!-- Footer -->
      <div class="text-center mt-3">
        <small class="text-muted"
          >&copy; <%= new Date().getFullYear() %> Your Company. All rights
          reserved.</small
        >
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Password Toggle Visibility
        const passwordInput = document.getElementById("password");
        const toggleIcon = document
          .getElementById("passwordToggle")
          .querySelector("i");

        document
          .getElementById("passwordToggle")
          .addEventListener("click", function () {
            if (passwordInput.type === "password") {
              passwordInput.type = "text";
              toggleIcon.classList.remove("fa-eye");
              toggleIcon.classList.add("fa-eye-slash");
            } else {
              passwordInput.type = "password";
              toggleIcon.classList.remove("fa-eye-slash");
              toggleIcon.classList.add("fa-eye");
            }
          });

        // Password Strength Meter
        const passwordStrength = document.getElementById("passwordStrength");
        const passwordStrengthText = document.getElementById(
          "passwordStrengthText"
        );

        passwordInput.addEventListener("input", function () {
          const password = this.value;
          let strength = 0;
          let tips = [];

          // Length
          if (password.length >= 8) {
            strength += 25;
          } else {
            tips.push("at least 8 characters");
          }

          // Uppercase
          if (/[A-Z]/.test(password)) {
            strength += 25;
          } else {
            tips.push("uppercase letter");
          }

          // Lowercase
          if (/[a-z]/.test(password)) {
            strength += 25;
          } else {
            tips.push("lowercase letter");
          }

          // Numbers or special chars
          if (/[0-9!@#$%^&*]/.test(password)) {
            strength += 25;
          } else {
            tips.push("number or special character");
          }

          // Update progress bar
          passwordStrength.style.width = strength + "%";

          // Update text and color based on strength
          if (strength <= 25) {
            passwordStrength.className = "progress-bar bg-danger";
            passwordStrengthText.textContent = "Weak password";
          } else if (strength <= 50) {
            passwordStrength.className = "progress-bar bg-warning";
            passwordStrengthText.textContent = "Fair password";
          } else if (strength <= 75) {
            passwordStrength.className = "progress-bar bg-info";
            passwordStrengthText.textContent = "Good password";
          } else {
            passwordStrength.className = "progress-bar bg-success";
            passwordStrengthText.textContent = "Strong password";
          }

          // Add tips if needed
          if (tips.length > 0) {
            passwordStrengthText.textContent += ". Add: " + tips.join(", ");
          }
        });

        // Form Validation
        const signupForm = document.getElementById("signupForm");
        signupForm.addEventListener("submit", function (event) {
          if (!this.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }

          // Add validation classes
          const nameInput = document.getElementById("name");
          const emailInput = document.getElementById("email");
          const passwordInput = document.getElementById("password");
          const agreeTerms = document.getElementById("agreeTerms");

          if (!nameInput.checkValidity()) {
            nameInput.classList.add("is-invalid");
          } else {
            nameInput.classList.remove("is-invalid");
          }

          if (!emailInput.checkValidity()) {
            emailInput.classList.add("is-invalid");
          } else {
            emailInput.classList.remove("is-invalid");
          }

          if (!passwordInput.checkValidity()) {
            passwordInput.classList.add("is-invalid");
          } else {
            passwordInput.classList.remove("is-invalid");
          }

          if (!agreeTerms.checked) {
            agreeTerms.classList.add("is-invalid");
            event.preventDefault();
          } else {
            agreeTerms.classList.remove("is-invalid");
          }
        });

        // Remove invalid class on input
        const allInputs = document.querySelectorAll("input");
        allInputs.forEach((input) => {
          input.addEventListener("input", function () {
            if (this.checkValidity()) {
              this.classList.remove("is-invalid");
            }
          });
        });

        // Check for query parameters to show error/success messages
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get("error");
        const success = urlParams.get("success");

        if (error) {
          const alertDiv = document.createElement("div");
          alertDiv.className = "alert alert-danger animated fadeIn";
          alertDiv.innerHTML = `<i class="fas fa-exclamation-circle me-2"></i>${decodeURIComponent(
            error
          )}`;
          document.querySelector(".card-body").prepend(alertDiv);
        }

        if (success) {
          const alertDiv = document.createElement("div");
          alertDiv.className = "alert alert-success animated fadeIn";
          alertDiv.innerHTML = `<i class="fas fa-check-circle me-2"></i>${decodeURIComponent(
            success
          )}`;
          document.querySelector(".card-body").prepend(alertDiv);
        }
      });
    </script>
  </body>
</html>
